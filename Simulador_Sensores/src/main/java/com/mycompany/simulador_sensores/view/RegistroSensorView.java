/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.simulador_sensores.view;

import com.mycompany.simulador_sensores.data.DataSen;
import com.mycompany.simulador_sensores.data.impl.HumidityData;
import com.mycompany.simulador_sensores.data.impl.TemperatureData;
import com.mycompany.simulador_sensores.data.impl.unit.HumidityUnit;
import com.mycompany.simulador_sensores.data.impl.unit.TemperatureUnit;
import com.mycompany.simulador_sensores.facade.SensorFacade;
import com.mycompany.simulador_sensores.facade.impl.SensorFacadeImpl;
import com.mycompany.simulador_sensores.protocol.Protocol;
import com.mycompany.simulador_sensores.protocol.factory.ProtocolFactory;
import com.mycompany.simulador_sensores.sensor.Sensor;
import java.util.ArrayList;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Diego
 */
public class RegistroSensorView extends javax.swing.JFrame {

    private PantallaSensores pantallaSensores;
    // private String tipoSensor;
    private final SensorFacade sensorFacade = new SensorFacadeImpl();

    /**
     * Creates new form RegistroSensorView
     */
    public RegistroSensorView() {
        initComponents();
        cargarCbxHumedad();
        cargarCbxTemperatura();
    }

    /**
     * Creates new form RegistroSensorView
     *
     * @param pantallaSensores
     */
    public RegistroSensorView(PantallaSensores pantallaSensores) {
        initComponents();
        cargarCbxHumedad();
        cargarCbxTemperatura();
        this.pantallaSensores = pantallaSensores;

    }

    private void cargarCbxHumedad() {
        HumidityUnit[] valores = HumidityUnit.values();
        DefaultComboBoxModel< HumidityUnit> model = new DefaultComboBoxModel<>(valores);
        cbxHumedad.removeAllItems();
        cbxHumedad.setModel(model);
    }

    private void cargarCbxTemperatura() {
        TemperatureUnit[] valores = TemperatureUnit.values();
        DefaultComboBoxModel<TemperatureUnit> model = new DefaultComboBoxModel<>(valores);
        this.cbxTemperatura.removeAllItems();
        this.cbxTemperatura.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtSerie = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnHumedad = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        btnTemperatura = new javax.swing.JRadioButton();
        cbxHumedad = new javax.swing.JComboBox<>();
        cbxTemperatura = new javax.swing.JComboBox<>();
        tiempoSpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbxProtocolo = new javax.swing.JComboBox<>();
        txtGateway = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(221, 208, 200));
        jPanel1.setMinimumSize(new java.awt.Dimension(330, 650));
        jPanel1.setPreferredSize(new java.awt.Dimension(330, 650));

        txtSerie.setBackground(new java.awt.Color(221, 208, 200));
        txtSerie.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtSerie.setForeground(new java.awt.Color(50, 50, 50));
        txtSerie.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSerie.setText("(Ingrese la serie)");
        txtSerie.setToolTipText("");
        txtSerie.setBorder(null);
        txtSerie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSerieFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSerieFocusLost(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(50, 50, 50));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");

        jPanel2.setBackground(new java.awt.Color(50, 50, 50));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnHumedad.setBackground(new java.awt.Color(221, 208, 200));
        btnHumedad.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHumedad.setForeground(new java.awt.Color(50, 50, 50));
        btnHumedad.setText("Humedad");
        btnHumedad.setBorder(null);
        btnHumedad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnHumedadItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(50, 50, 50));
        jLabel2.setText("Segundos");

        btnTemperatura.setBackground(new java.awt.Color(221, 208, 200));
        btnTemperatura.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTemperatura.setForeground(new java.awt.Color(50, 50, 50));
        btnTemperatura.setText("Temperatura");
        btnTemperatura.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnTemperaturaItemStateChanged(evt);
            }
        });
        btnTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTemperaturaActionPerformed(evt);
            }
        });

        cbxHumedad.setBackground(new java.awt.Color(221, 208, 200));
        cbxHumedad.setForeground(new java.awt.Color(50, 50, 50));
        cbxHumedad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cbxHumedad.setEnabled(false);

        cbxTemperatura.setBackground(new java.awt.Color(221, 208, 200));
        cbxTemperatura.setForeground(new java.awt.Color(50, 50, 50));
        cbxTemperatura.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cbxTemperatura.setEnabled(false);

        tiempoSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        tiempoSpinner.setToolTipText("");
        tiempoSpinner.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(50, 50, 50));
        jLabel4.setText("Muestra");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(50, 50, 50));
        jLabel5.setText("Protocolo");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(50, 50, 50));
        jLabel6.setText("Intervalo Tiempo");

        cbxProtocolo.setBackground(new java.awt.Color(221, 208, 200));
        cbxProtocolo.setForeground(new java.awt.Color(50, 50, 50));
        cbxProtocolo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MQTT", "COAP" }));

        txtGateway.setBackground(new java.awt.Color(221, 208, 200));
        txtGateway.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtGateway.setForeground(new java.awt.Color(50, 50, 50));
        txtGateway.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGateway.setText("(Ingrese la identificador del gateway)");
        txtGateway.setBorder(null);
        txtGateway.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGatewayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGatewayFocusLost(evt);
            }
        });
        txtGateway.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGatewayActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(50, 50, 50));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");

        jPanel3.setBackground(new java.awt.Color(50, 50, 50));
        jPanel3.setForeground(new java.awt.Color(60, 63, 65));

        btnGuardar.setBackground(new java.awt.Color(102, 255, 102));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cerrar1.png"))); // NOI18N
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSerie)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnHumedad)
                                    .addComponent(btnTemperatura))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxHumedad, 0, 103, Short.MAX_VALUE)
                                    .addComponent(cbxTemperatura, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cbxProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tiempoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txtGateway, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(jLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSalir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSalir)
                        .addGap(9, 9, 9)))
                .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHumedad)
                            .addComponent(cbxHumedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTemperatura))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tiempoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbxProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(txtGateway, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(37, 37, 37)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSerieFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSerieFocusGained
        // TODO add your handling code here:
        if (this.txtSerie.getText().equals("(Ingrese la serie)")) {
            txtSerie.setText("");
        }
    }//GEN-LAST:event_txtSerieFocusGained

    private void txtSerieFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSerieFocusLost
        // TODO add your handling code here:
        if (this.txtSerie.getText().equals("")) {
            txtSerie.setText("(Ingrese la serie)");
        }
    }//GEN-LAST:event_txtSerieFocusLost

    private void btnHumedadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnHumedadItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            this.cbxHumedad.setEnabled(true);
        } else if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            this.cbxHumedad.setEnabled(false);
        }
    }//GEN-LAST:event_btnHumedadItemStateChanged

    private void btnTemperaturaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnTemperaturaItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            this.cbxTemperatura.setEnabled(true);
        } else if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            this.cbxTemperatura.setEnabled(false);
        }
    }//GEN-LAST:event_btnTemperaturaItemStateChanged

    private void txtGatewayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGatewayFocusGained
        // TODO add your handling code here:
        if (this.txtGateway.getText().equals("(Ingrese la identificador del gateway)")) {
            txtGateway.setText("");
        }
    }//GEN-LAST:event_txtGatewayFocusGained

    private void txtGatewayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGatewayFocusLost
        // TODO add your handling code here:
        if (this.txtGateway.getText().equals("")) {
            txtGateway.setText("(Ingrese la identificador del gateway)");
        }
    }//GEN-LAST:event_txtGatewayFocusLost

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        // TODO add your handling code here:
        vaciarFormulario();
        this.setVisible(false);
        pantallaSensores.setVisible(true);
    }//GEN-LAST:event_btnSalirMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        try {
            // TODO add your handling code here:
            sensorFacade.addSensor(capturarSensor());
            pantallaSensores.cargarDatosTabla();
            vaciarFormulario();
            this.setVisible(false);
            pantallaSensores.setVisible(true);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al guardar el sensor", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemperaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTemperaturaActionPerformed

    private void txtGatewayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGatewayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGatewayActionPerformed
    // metodos importantes

    private Sensor capturarSensor() {
        validateSensor();
        // 1
        String serie = this.txtSerie.getText();
        // 2 muestra
        List<DataSen> datasSen = validarMuestra();
        // 3 Intervalo
        int intervaloTiempo = (int) this.tiempoSpinner.getValue();
        // 4 Protocolo
        String protocoloCbx = (String) this.cbxProtocolo.getSelectedItem();

        // 5 Gateway
        String gateway = this.txtGateway.getText();
        // Se crea la instancia protocolo

        Protocol protocol = ProtocolFactory.createProtocol(protocoloCbx,
                serie, gateway);

        Sensor sensor = Sensor.builder().serie(serie).timeInterval(intervaloTiempo).
                protocol(protocol).data(datasSen).build();

        return sensor;
    }

    private void validateSensor() {

        String serie = this.txtSerie.getText();
        List<DataSen> datasSen = validarMuestra();
        int intervaloTiempo = (int) this.tiempoSpinner.getValue();
        String protocoloCbx = (String) this.cbxProtocolo.getSelectedItem();
        String gateway = this.txtGateway.getText();

        if (serie == null || serie.isEmpty() || serie.equals("(Ingrese la serie)")) {
            throw new IllegalArgumentException("El campo 'serie' no puede estar vacío o nulo.");
        }
        if (intervaloTiempo <= 0) {
            throw new IllegalArgumentException("El intervalo de tiempo debe ser mayor que 0.");
        }
        if (protocoloCbx == null || serie.isEmpty()) {
            throw new IllegalArgumentException("El protocolo no puede ser nulo.");
        }
        if (datasSen == null || datasSen.isEmpty()) {
            throw new IllegalArgumentException("Las muestras del sensor no pueden ser nulos o vacíos.");
        }
        if (gateway == null || gateway.isEmpty() || gateway.equals("(Ingrese la identificador del gateway)")) {
            throw new IllegalArgumentException("El campo 'identificador del gateway' no puede estar vacío o nulo.");
        }

    }

    private List<DataSen> validarMuestra() {
        List<DataSen> datas = new ArrayList<>();
        if (this.btnHumedad.isSelected()) {
            HumidityUnit humidityUnit = (HumidityUnit) this.cbxHumedad.getSelectedItem();
            datas.add((DataSen) HumidityData.builder().humidityUnit(humidityUnit).build());
        }
        if (this.btnTemperatura.isSelected()) {
            TemperatureUnit temperatureUnit = (TemperatureUnit) this.cbxTemperatura.getSelectedItem();
            datas.add((DataSen) TemperatureData.builder().temperatureUnit(temperatureUnit).build());
        }
        return datas;
    }

    private void vaciarFormulario() {
        this.txtSerie.setText("(Ingrese la serie)");
        this.btnHumedad.setSelected(false);
        this.cbxHumedad.setSelectedIndex(-1);
        this.cbxHumedad.setEnabled(false);
        this.btnTemperatura.setSelected(false);
        this.cbxTemperatura.setSelectedIndex(-1);
        this.cbxTemperatura.setEnabled(false);
        this.tiempoSpinner.setValue(1);
        this.cbxProtocolo.setSelectedIndex(-1);
        this.txtGateway.setText("(Ingrese la identificador del gateway)");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnGuardar;
    private javax.swing.JRadioButton btnHumedad;
    private javax.swing.JLabel btnSalir;
    private javax.swing.JRadioButton btnTemperatura;
    private javax.swing.JComboBox<HumidityUnit> cbxHumedad;
    private javax.swing.JComboBox<String> cbxProtocolo;
    private javax.swing.JComboBox<TemperatureUnit> cbxTemperatura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner tiempoSpinner;
    private javax.swing.JTextField txtGateway;
    private javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables
}
